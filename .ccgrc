#!/bin/sh

###################################################
### Functions
###################################################

# append_path() and prepend_path() adapted from Fink's init.sh

# add to end of path
append_path()
{
    if eval test -z "\$$1"
    then
        eval "export $1=$2"
    fi

    if ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\""
    then
        eval "export $1=\$$1:$2"
    fi
}

# add to beginning of path
prepend_path()
{
    if eval test -z "\$$1"
    then
      eval "export $1=$2"
      return
    fi

    if ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\""
    then
      eval "export $1=$2:\$$1"
    fi
}

prepend_path_if_exists()
{
    if [ -d "$2" ]
    then
        prepend_path $1 $2
    fi
}


###################################################
### PATH-type list variables
###################################################

for i in /opt/*/bin
do
    prepend_path_if_exists PATH $i
done

prepend_path PATH $HOME/bin

for i in $HOME/opt/*/bin
do
    prepend_path_if_exists PATH $i
done

###################################################
### Simple variables
###################################################

if [ -z "$HOST" ]
then
    HOST=$(hostname | sed 's/\..*//')
fi

export EDITOR=vim
export VISUAL=vim

export LC_COLLATE="POSIX"

if [ "$TERM" == "xterm" ]
then
    export TERM="xterm-color"
fi

# Change the window title of X terminals
case $TERM in
    xterm*|rxvt|Eterm|eterm)
        PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
        ;;
    screen)
        PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
        ;;
esac


###################################################
### Aliases
###################################################

# My most common typo.
# Dear Ubuntu, please stop telling me to "sudo apt-get install sl"
alias sl=ls

alias mv='mv -iv'
alias cp='cp -iv'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias rgrep='rgrep --color=auto'
alias diff='colordiff'


###################################################
### Platform- or system-specific modifications
###################################################

if [ "$(uname -s)" == "Darwin" ]; then
    # Mac OS X stuff:
    alias ls='ls -AFGq'
    # Make sure /usr/local/bin is before /usr/bin so that Homebrew's postgres
    # commands take precendence:
    #prepend_path PATH "/usr/local/bin"
    # need to force it:
    PATH="/usr/local/bin:$PATH"
    # Fix Backspace/Delete confusion:
    stty erase ^?
    # XTerm's $MANPATH gets messed up, and I can't find where it's happening.
    # Screw it. Just reset the whole thing, cuz the default works.
    unset MANPATH
    BASH_GIT_COMPLETION="/usr/local/etc/bash_completion.d/git-completion.bash"
    alias mysql_start='/usr/local/share/mysql/mysql.server start'
    alias pg_start='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
    alias pg_stop="pg_ctl -D /usr/local/var/postgres stop -s -m fast"
    prepend_path_if_exists PATH "/usr/local/share/npm/bin"
else
    alias ls='ls -F --color=auto'
    BASH_GIT_COMPLETION="/etc/bash_completion.d/git"
fi

[ -f "$BASH_GIT_COMPLETION" ] && source "$BASH_GIT_COMPLETION"


###################################################
### git prompt hack
###################################################
# http://henrik.nyh.se/2008/12/git-dirty-prompt
# http://www.simplisticcomplexity.com/2008/03/13/show-your-git-branch-name-in-your-prompt/
#   username@Machine ~/dev/dir[master]$   # clean working directory
#   username@Machine ~/dev/dir[master*]$  # dirty working directory

function parse_git_dirty {
    [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" ]] && echo "*"
}


function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/ (Git branch: \1$(parse_git_dirty))/"
}

# For now, my full PS1 is too slow for certain projects that have checked in
# multiple megabytes of static images into Git...
PS1_BASE="\n\[\033[01;32m\]\u@\h\[\033[01;34m\] \w\[\033[00m\]\$(active_virtualenv)"
export FASTER_PS1="${PS1_BASE}\n\$ "
export CCG_PS1="${PS1_BASE}\$(parse_git_branch)\n\$ "

PS1="$CCG_PS1"

append_path NODE_PATH /usr/local/lib/node_modules

export NVM_DIR=$HOME/.nvm
source $(brew --prefix nvm)/nvm.sh

SENCHA_CMD_PATH="/Users/chad/bin/Sencha/Cmd/5.0.0.160"
# TODO figure out if this is still needed with Cmd 4.x series:
export SENCHA_CMD_PATH_3_0_0="${SENCHA_CMD_PATH}"
prepend_path PATH "${SENCHA_CMD_PATH}"

# Finally, rvm magic...
# Here is the original comment that RVM added to my .bash_profile:
# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
